package languages
import "github.com/d4l3k/go-highlight/registry"
func init() {
  registry.Register([]string{"crystal", "cr"}, `{"aliases":["cr"],"lexemes":"[a-zA-Z_]\\w*[!?=]?","keywords":{"keyword":"abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__","literal":"false nil true"},"contains":[{"className":"template-variable","variants":[{"begin":"\\{\\{","end":"\\}\\}"},{"begin":"\\{%","end":"%\\}"}],"keywords":{"keyword":"abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__","literal":"false nil true"},"contains":[{"className":"string","contains":[{"begin":"\\\\[\\s\\S]","relevance":0},{"className":"subst","begin":"#{","end":"}","keywords":{"keyword":"abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__","literal":"false nil true"},"contains":[{"Ref":["contains"],"IsArray":true}]}],"variants":[{"begin":"'","end":"'"},{"begin":"\"","end":"\""},{"begin":"`+"`"+`","end":"`+"`"+`"},{"begin":"%w?\\(","end":"\\)","contains":[{"begin":"\\(","end":"\\)","contains":[{"Ref":["contains","0","contains","0","variants","3","contains"],"IsArray":true}]}]},{"begin":"%w?\\[","end":"\\]","contains":[{"begin":"\\[","end":"\\]","contains":[{"Ref":["contains","0","contains","0","variants","4","contains"],"IsArray":true}]}]},{"begin":"%w?{","end":"}","contains":[{"begin":"{","end":"}","contains":[{"Ref":["contains","0","contains","0","variants","5","contains"],"IsArray":true}]}]},{"begin":"%w?<","end":">","contains":[{"begin":"<","end":">","contains":[{"Ref":["contains","0","contains","0","variants","6","contains"],"IsArray":true}]}]},{"begin":"%w?/","end":"/"},{"begin":"%w?%","end":"%"},{"begin":"%w?-","end":"-"},{"begin":"%w?\\|","end":"\\|"},{"begin":"<<-\\w+$","end":"^\\s*\\w+$"}],"relevance":0},{"className":"string","variants":[{"begin":"%q\\(","end":"\\)","contains":[{"begin":"\\(","end":"\\)","contains":[{"Ref":["contains","0","contains","1","variants","0","contains"],"IsArray":true}]}]},{"begin":"%q\\[","end":"\\]","contains":[{"begin":"\\[","end":"\\]","contains":[{"Ref":["contains","0","contains","1","variants","1","contains"],"IsArray":true}]}]},{"begin":"%q{","end":"}","contains":[{"begin":"{","end":"}","contains":[{"Ref":["contains","0","contains","1","variants","2","contains"],"IsArray":true}]}]},{"begin":"%q<","end":">","contains":[{"begin":"<","end":">","contains":[{"Ref":["contains","0","contains","1","variants","3","contains"],"IsArray":true}]}]},{"begin":"%q/","end":"/"},{"begin":"%q%","end":"%"},{"begin":"%q-","end":"-"},{"begin":"%q\\|","end":"\\|"},{"begin":"<<-'\\w+'$","end":"^\\s*\\w+$"}],"relevance":0},{"begin":"(!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~)\\s*","contains":[{"className":"regexp","contains":[{"begin":"\\\\[\\s\\S]","relevance":0},{"className":"subst","begin":"#{","end":"}","keywords":{"keyword":"abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__","literal":"false nil true"},"contains":[{"Ref":["contains"],"IsArray":true}]}],"variants":[{"begin":"//[a-z]*","relevance":0},{"begin":"/","end":"/[a-z]*"},{"begin":"%r\\(","end":"\\)","contains":[{"begin":"\\(","end":"\\)","contains":[{"Ref":["contains","0","contains","2","contains","0","variants","2","contains"],"IsArray":true}]}]},{"begin":"%r\\[","end":"\\]","contains":[{"begin":"\\[","end":"\\]","contains":[{"Ref":["contains","0","contains","2","contains","0","variants","3","contains"],"IsArray":true}]}]},{"begin":"%r{","end":"}","contains":[{"begin":"{","end":"}","contains":[{"Ref":["contains","0","contains","2","contains","0","variants","4","contains"],"IsArray":true}]}]},{"begin":"%r<","end":">","contains":[{"begin":"<","end":">","contains":[{"Ref":["contains","0","contains","2","contains","0","variants","5","contains"],"IsArray":true}]}]},{"begin":"%r/","end":"/"},{"begin":"%r%","end":"%"},{"begin":"%r-","end":"-"},{"begin":"%r\\|","end":"\\|"}]}],"relevance":0},{"className":"regexp","contains":[{"begin":"\\\\[\\s\\S]","relevance":0},{"className":"subst","begin":"#{","end":"}","keywords":{"keyword":"abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__","literal":"false nil true"},"contains":[{"Ref":["contains"],"IsArray":true}]}],"variants":[{"begin":"%r\\(","end":"\\)","contains":[{"begin":"\\(","end":"\\)","contains":[{"Ref":["contains","0","contains","3","variants","0","contains"],"IsArray":true}]}]},{"begin":"%r\\[","end":"\\]","contains":[{"begin":"\\[","end":"\\]","contains":[{"Ref":["contains","0","contains","3","variants","1","contains"],"IsArray":true}]}]},{"begin":"%r{","end":"}","contains":[{"begin":"{","end":"}","contains":[{"Ref":["contains","0","contains","3","variants","2","contains"],"IsArray":true}]}]},{"begin":"%r<","end":">","contains":[{"begin":"<","end":">","contains":[{"Ref":["contains","0","contains","3","variants","3","contains"],"IsArray":true}]}]},{"begin":"%r/","end":"/"},{"begin":"%r%","end":"%"},{"begin":"%r-","end":"-"},{"begin":"%r\\|","end":"\\|"}],"relevance":0},{"className":"meta","begin":"@\\[","end":"\\]","contains":[{"className":"meta-string","begin":"\"","end":"\"","illegal":"\\n","contains":[{"begin":"\\\\[\\s\\S]","relevance":0},{"className":"subst","begin":"\\\\[abfnrtv]\\|\\\\x[0-9a-fA-F]*\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]","relevance":0}]}]},{"className":"comment","begin":"#","end":"$","contains":[{"begin":"\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b"},{"className":"doctag","begin":"(?:TODO|FIXME|NOTE|BUG|XXX):","relevance":0}]},{"className":"class","beginKeywords":"class module struct","end":"$|;","illegal":"=","contains":[{"className":"comment","begin":"#","end":"$","contains":[{"begin":"\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b"},{"className":"doctag","begin":"(?:TODO|FIXME|NOTE|BUG|XXX):","relevance":0}]},{"className":"title","begin":"[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?","relevance":0},{"begin":"<"}]},{"className":"class","beginKeywords":"lib enum union","end":"$|;","illegal":"=","contains":[{"className":"comment","begin":"#","end":"$","contains":[{"begin":"\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b"},{"className":"doctag","begin":"(?:TODO|FIXME|NOTE|BUG|XXX):","relevance":0}]},{"className":"title","begin":"[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?","relevance":0}],"relevance":10},{"className":"function","beginKeywords":"def","end":"\\B\\b","contains":[{"className":"title","begin":"[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`+"`"+`|]|\\[\\][=?]?","relevance":0,"endsParent":true}]},{"className":"function","beginKeywords":"fun macro","end":"\\B\\b","contains":[{"className":"title","begin":"[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`+"`"+`|]|\\[\\][=?]?","relevance":0,"endsParent":true}],"relevance":5},{"className":"symbol","begin":"[a-zA-Z_]\\w*(\\!|\\?)?:","relevance":0},{"className":"symbol","begin":":","contains":[{"className":"string","contains":[{"begin":"\\\\[\\s\\S]","relevance":0},{"className":"subst","begin":"#{","end":"}","keywords":{"keyword":"abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__","literal":"false nil true"},"contains":[{"Ref":["contains"],"IsArray":true}]}],"variants":[{"begin":"'","end":"'"},{"begin":"\"","end":"\""},{"begin":"`+"`"+`","end":"`+"`"+`"},{"begin":"%w?\\(","end":"\\)","contains":[{"begin":"\\(","end":"\\)","contains":[{"Ref":["contains","0","contains","0","variants","3","contains"],"IsArray":true}]}]},{"begin":"%w?\\[","end":"\\]","contains":[{"begin":"\\[","end":"\\]","contains":[{"Ref":["contains","0","contains","0","variants","4","contains"],"IsArray":true}]}]},{"begin":"%w?{","end":"}","contains":[{"begin":"{","end":"}","contains":[{"Ref":["contains","0","contains","0","variants","5","contains"],"IsArray":true}]}]},{"begin":"%w?<","end":">","contains":[{"begin":"<","end":">","contains":[{"Ref":["contains","0","contains","0","variants","6","contains"],"IsArray":true}]}]},{"begin":"%w?/","end":"/"},{"begin":"%w?%","end":"%"},{"begin":"%w?-","end":"-"},{"begin":"%w?\\|","end":"\\|"},{"begin":"<<-\\w+$","end":"^\\s*\\w+$"}],"relevance":0},{"begin":"[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`+"`"+`|]|\\[\\][=?]?"}],"relevance":0},{"className":"number","variants":[{"begin":"\\b0b([01_]*[01])(_[uif](8|16|32|64))?"},{"begin":"\\b0o([0-7_]*[0-7])(_[uif](8|16|32|64))?"},{"begin":"\\b0x([A-Fa-f0-9_]*[A-Fa-f0-9])(_[uif](8|16|32|64))?"},{"begin":"\\b(([0-9][0-9_]*[0-9]|[0-9])(\\.[0-9_]*[0-9])?([eE][+-]?[0-9_]*[0-9])?)(_[uif](8|16|32|64))?"}],"relevance":0}]},{"className":"string","contains":[{"begin":"\\\\[\\s\\S]","relevance":0},{"className":"subst","begin":"#{","end":"}","keywords":{"keyword":"abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__","literal":"false nil true"},"contains":[{"Ref":["contains"],"IsArray":true}]}],"variants":[{"begin":"'","end":"'"},{"begin":"\"","end":"\""},{"begin":"`+"`"+`","end":"`+"`"+`"},{"begin":"%w?\\(","end":"\\)","contains":[{"begin":"\\(","end":"\\)","contains":[{"Ref":["contains","0","contains","0","variants","3","contains"],"IsArray":true}]}]},{"begin":"%w?\\[","end":"\\]","contains":[{"begin":"\\[","end":"\\]","contains":[{"Ref":["contains","0","contains","0","variants","4","contains"],"IsArray":true}]}]},{"begin":"%w?{","end":"}","contains":[{"begin":"{","end":"}","contains":[{"Ref":["contains","0","contains","0","variants","5","contains"],"IsArray":true}]}]},{"begin":"%w?<","end":">","contains":[{"begin":"<","end":">","contains":[{"Ref":["contains","0","contains","0","variants","6","contains"],"IsArray":true}]}]},{"begin":"%w?/","end":"/"},{"begin":"%w?%","end":"%"},{"begin":"%w?-","end":"-"},{"begin":"%w?\\|","end":"\\|"},{"begin":"<<-\\w+$","end":"^\\s*\\w+$"}],"relevance":0},{"className":"string","variants":[{"begin":"%q\\(","end":"\\)","contains":[{"begin":"\\(","end":"\\)","contains":[{"Ref":["contains","0","contains","1","variants","0","contains"],"IsArray":true}]}]},{"begin":"%q\\[","end":"\\]","contains":[{"begin":"\\[","end":"\\]","contains":[{"Ref":["contains","0","contains","1","variants","1","contains"],"IsArray":true}]}]},{"begin":"%q{","end":"}","contains":[{"begin":"{","end":"}","contains":[{"Ref":["contains","0","contains","1","variants","2","contains"],"IsArray":true}]}]},{"begin":"%q<","end":">","contains":[{"begin":"<","end":">","contains":[{"Ref":["contains","0","contains","1","variants","3","contains"],"IsArray":true}]}]},{"begin":"%q/","end":"/"},{"begin":"%q%","end":"%"},{"begin":"%q-","end":"-"},{"begin":"%q\\|","end":"\\|"},{"begin":"<<-'\\w+'$","end":"^\\s*\\w+$"}],"relevance":0},{"begin":"(!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~)\\s*","contains":[{"className":"regexp","contains":[{"begin":"\\\\[\\s\\S]","relevance":0},{"className":"subst","begin":"#{","end":"}","keywords":{"keyword":"abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__","literal":"false nil true"},"contains":[{"Ref":["contains"],"IsArray":true}]}],"variants":[{"begin":"//[a-z]*","relevance":0},{"begin":"/","end":"/[a-z]*"},{"begin":"%r\\(","end":"\\)","contains":[{"begin":"\\(","end":"\\)","contains":[{"Ref":["contains","0","contains","2","contains","0","variants","2","contains"],"IsArray":true}]}]},{"begin":"%r\\[","end":"\\]","contains":[{"begin":"\\[","end":"\\]","contains":[{"Ref":["contains","0","contains","2","contains","0","variants","3","contains"],"IsArray":true}]}]},{"begin":"%r{","end":"}","contains":[{"begin":"{","end":"}","contains":[{"Ref":["contains","0","contains","2","contains","0","variants","4","contains"],"IsArray":true}]}]},{"begin":"%r<","end":">","contains":[{"begin":"<","end":">","contains":[{"Ref":["contains","0","contains","2","contains","0","variants","5","contains"],"IsArray":true}]}]},{"begin":"%r/","end":"/"},{"begin":"%r%","end":"%"},{"begin":"%r-","end":"-"},{"begin":"%r\\|","end":"\\|"}]}],"relevance":0},{"className":"regexp","contains":[{"begin":"\\\\[\\s\\S]","relevance":0},{"className":"subst","begin":"#{","end":"}","keywords":{"keyword":"abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__","literal":"false nil true"},"contains":[{"Ref":["contains"],"IsArray":true}]}],"variants":[{"begin":"%r\\(","end":"\\)","contains":[{"begin":"\\(","end":"\\)","contains":[{"Ref":["contains","0","contains","3","variants","0","contains"],"IsArray":true}]}]},{"begin":"%r\\[","end":"\\]","contains":[{"begin":"\\[","end":"\\]","contains":[{"Ref":["contains","0","contains","3","variants","1","contains"],"IsArray":true}]}]},{"begin":"%r{","end":"}","contains":[{"begin":"{","end":"}","contains":[{"Ref":["contains","0","contains","3","variants","2","contains"],"IsArray":true}]}]},{"begin":"%r<","end":">","contains":[{"begin":"<","end":">","contains":[{"Ref":["contains","0","contains","3","variants","3","contains"],"IsArray":true}]}]},{"begin":"%r/","end":"/"},{"begin":"%r%","end":"%"},{"begin":"%r-","end":"-"},{"begin":"%r\\|","end":"\\|"}],"relevance":0},{"className":"meta","begin":"@\\[","end":"\\]","contains":[{"className":"meta-string","begin":"\"","end":"\"","illegal":"\\n","contains":[{"begin":"\\\\[\\s\\S]","relevance":0},{"className":"subst","begin":"\\\\[abfnrtv]\\|\\\\x[0-9a-fA-F]*\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]","relevance":0}]}]},{"className":"comment","begin":"#","end":"$","contains":[{"begin":"\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b"},{"className":"doctag","begin":"(?:TODO|FIXME|NOTE|BUG|XXX):","relevance":0}]},{"className":"class","beginKeywords":"class module struct","end":"$|;","illegal":"=","contains":[{"className":"comment","begin":"#","end":"$","contains":[{"begin":"\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b"},{"className":"doctag","begin":"(?:TODO|FIXME|NOTE|BUG|XXX):","relevance":0}]},{"className":"title","begin":"[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?","relevance":0},{"begin":"<"}]},{"className":"class","beginKeywords":"lib enum union","end":"$|;","illegal":"=","contains":[{"className":"comment","begin":"#","end":"$","contains":[{"begin":"\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b"},{"className":"doctag","begin":"(?:TODO|FIXME|NOTE|BUG|XXX):","relevance":0}]},{"className":"title","begin":"[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?","relevance":0}],"relevance":10},{"className":"function","beginKeywords":"def","end":"\\B\\b","contains":[{"className":"title","begin":"[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`+"`"+`|]|\\[\\][=?]?","relevance":0,"endsParent":true}]},{"className":"function","beginKeywords":"fun macro","end":"\\B\\b","contains":[{"className":"title","begin":"[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`+"`"+`|]|\\[\\][=?]?","relevance":0,"endsParent":true}],"relevance":5},{"className":"symbol","begin":"[a-zA-Z_]\\w*(\\!|\\?)?:","relevance":0},{"className":"symbol","begin":":","contains":[{"className":"string","contains":[{"begin":"\\\\[\\s\\S]","relevance":0},{"className":"subst","begin":"#{","end":"}","keywords":{"keyword":"abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__","literal":"false nil true"},"contains":[{"Ref":["contains"],"IsArray":true}]}],"variants":[{"begin":"'","end":"'"},{"begin":"\"","end":"\""},{"begin":"`+"`"+`","end":"`+"`"+`"},{"begin":"%w?\\(","end":"\\)","contains":[{"begin":"\\(","end":"\\)","contains":[{"Ref":["contains","0","contains","0","variants","3","contains"],"IsArray":true}]}]},{"begin":"%w?\\[","end":"\\]","contains":[{"begin":"\\[","end":"\\]","contains":[{"Ref":["contains","0","contains","0","variants","4","contains"],"IsArray":true}]}]},{"begin":"%w?{","end":"}","contains":[{"begin":"{","end":"}","contains":[{"Ref":["contains","0","contains","0","variants","5","contains"],"IsArray":true}]}]},{"begin":"%w?<","end":">","contains":[{"begin":"<","end":">","contains":[{"Ref":["contains","0","contains","0","variants","6","contains"],"IsArray":true}]}]},{"begin":"%w?/","end":"/"},{"begin":"%w?%","end":"%"},{"begin":"%w?-","end":"-"},{"begin":"%w?\\|","end":"\\|"},{"begin":"<<-\\w+$","end":"^\\s*\\w+$"}],"relevance":0},{"begin":"[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`+"`"+`|]|\\[\\][=?]?"}],"relevance":0},{"className":"number","variants":[{"begin":"\\b0b([01_]*[01])(_[uif](8|16|32|64))?"},{"begin":"\\b0o([0-7_]*[0-7])(_[uif](8|16|32|64))?"},{"begin":"\\b0x([A-Fa-f0-9_]*[A-Fa-f0-9])(_[uif](8|16|32|64))?"},{"begin":"\\b(([0-9][0-9_]*[0-9]|[0-9])(\\.[0-9_]*[0-9])?([eE][+-]?[0-9_]*[0-9])?)(_[uif](8|16|32|64))?"}],"relevance":0}]}`)
}